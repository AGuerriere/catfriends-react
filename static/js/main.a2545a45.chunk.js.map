{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","cats","map","user","i","Searchbox","searchChange","type","placeholder","onChange","Scroll","style","overflow","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filterCats","filter","cat","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gOAeeA,EAbF,SAACC,GACV,IAAQC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACrB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BH,EAA1B,eACnB,gCACI,6BAAKF,IACL,4BAAIC,WCaJK,EAnBE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,OACA,8BAEGA,EAAKC,KAAI,SAACC,EAAMC,GACZ,OACA,cAAC,EAAD,CAEAR,GAAIK,EAAKG,GAAGR,GACZF,KAAMO,EAAKG,GAAGV,KACdC,MAAOM,EAAKG,GAAGT,OAHVS,SCKFC,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACAA,UAAU,oCACVU,KAAK,SACLC,YAAY,cACZC,SAAUH,OCCPI,EARA,SAACjB,GACZ,OACI,qBAAKkB,MAAO,CAAEC,SAAU,SAAUC,OAAQ,SAA1C,SACMpB,EAAMqB,YCwCLC,G,wDArCX,aAAe,IAAD,8BACV,gBAcJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAd1C,EAAKC,MAAQ,CACTrB,KAAM,GACNkB,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBI,MAAM,6CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEjB,KAAM0B,S,oBAQzC,WACI,MAA8BC,KAAKN,MAA3BrB,EAAR,EAAQA,KAAMkB,EAAd,EAAcA,YACRU,EAAa5B,EAAK6B,QAAO,SAAAC,GAC3B,OAAOA,EAAIrC,KAAKsC,cAAcC,SAASd,EAAYa,kBAEvD,OAAQ/B,EAAKiC,OAEL,sBAAKrC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,wBACA,cAAC,EAAD,CAAWS,aAAcsB,KAAKZ,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUf,KAAO4B,SAL7B,8C,GA1BMM,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAAWC,SAASC,eAAe,SAMnDX,M","file":"static/js/main.a2545a45.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n    const { name, email, id } = props;\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='cats' src={`https://robohash.org/${id}?set=set4`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n const CardList = ({ cats }) => {\n     return (\n     <div>\n        {\n        cats.map((user, i) => {\n            return (\n            <Card \n            key={i} \n            id={cats[i].id} \n            name={cats[i].name} \n            email={cats[i].email}\n            />\n            );\n            })\n         }\n    </div>\n     );\n }\n\n export default CardList;","import React from 'react';\n\nconst Searchbox = ({searchChange}) => {\n    return (\n        <div className='pa2'>\n            <input\n            className='pa3 ba b- -green bg-lightest-blue'\n            type='search' \n            placeholder='search cats'\n            onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default Searchbox ","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflow: 'scroll', height: '100vh'}}>\n            { props.children }\n        </div>\n    )\n}\n\nexport default Scroll;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport Searchbox from '../components/Searchbox';\nimport Scroll from '../components/Scroll';\nimport './App.css'\n\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            cats: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('http://jsonplaceholder.typicode.com/users')\n        .then(response=>response.json())\n        .then(users => this.setState({ cats: users }));\n    }\n\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value })\n    }\n\n    render() {\n        const { cats, searchfield } = this.state\n        const filterCats = cats.filter(cat => {\n            return cat.name.toLowerCase().includes(searchfield.toLowerCase())\n        })\n        return !cats.length ?\n            <h1> Loading</h1> : (\n                <div className='tc'>\n                    <h1 className='f1'>Catfriends</h1>\n                    <Searchbox searchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <CardList cats={ filterCats }/>\n                    </Scroll>\n                </div>\n            );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App />  , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}